// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.TradeVolumes.Client.AutorestClient
{
    using Lykke.Service;
    using Lykke.Service.TradeVolumes;
    using Lykke.Service.TradeVolumes.Client;
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface ITradeVolumesAPI : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Checks service is alive
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> IsAliveWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetId within specified time period.
        /// </summary>
        /// <param name='assetId'>
        /// Asset Id
        /// </param>
        /// <param name='fromDateStr'>
        /// Start DateTime in yyyyMMddHH string format (Inclusive)
        /// </param>
        /// <param name='toDateStr'>
        /// Finish DateTime in yyyyMMddHH string format (Exclusive)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetPeriodClientAssetTradeVolumeWithHttpMessagesAsync(string assetId, string fromDateStr, string toDateStr, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetPairId within specified time
        /// period.
        /// </summary>
        /// <param name='assetPairId'>
        /// AssetPair Id
        /// </param>
        /// <param name='fromDateStr'>
        /// Start DateTime in yyyyMMddHH string format (Inclusive)
        /// </param>
        /// <param name='toDateStr'>
        /// Finish DateTime in yyyyMMddHH string format (Exclusive)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetPeriodClientAssetPairTradeVolumeWithHttpMessagesAsync(string assetPairId, string fromDateStr, string toDateStr, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetId for clientId within specified
        /// time period.
        /// </summary>
        /// <param name='assetId'>
        /// Asset Id
        /// </param>
        /// <param name='clientId'>
        /// Client Id
        /// </param>
        /// <param name='fromDateStr'>
        /// Start DateTime in yyyyMMddHH string format (Inclusive)
        /// </param>
        /// <param name='toDateStr'>
        /// Finish DateTime in yyyyMMddHH string format (Exclusive)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetPeriodClientAssetTradeVolume1WithHttpMessagesAsync(string assetId, string clientId, string fromDateStr, string toDateStr, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetPairId for clientId within
        /// specified time period.
        /// </summary>
        /// <param name='assetPairId'>
        /// AssetPair Id
        /// </param>
        /// <param name='clientId'>
        /// Client Id
        /// </param>
        /// <param name='fromDateStr'>
        /// Start DateTime in yyyyMMddHH string format (Inclusive)
        /// </param>
        /// <param name='toDateStr'>
        /// Finish DateTime in yyyyMMddHH string format (Exclusive)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> GetPeriodClientAssetPairTradeVolume1WithHttpMessagesAsync(string assetPairId, string clientId, string fromDateStr, string toDateStr, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
