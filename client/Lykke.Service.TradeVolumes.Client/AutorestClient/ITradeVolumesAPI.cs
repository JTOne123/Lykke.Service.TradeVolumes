// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.TradeVolumes.Client.AutorestClient
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface ITradeVolumesAPI : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Checks service is alive
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> IsAliveWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetId within specified time period.
        /// </summary>
        /// <param name='assetId'>
        /// Asset Id
        /// </param>
        /// <param name='fromDate'>
        /// Start DateTime (Inclusive) with hour precision
        /// </param>
        /// <param name='toDate'>
        /// Finish DateTime (Exclusive) with hour precision
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetTradeVolumeResponse>> GetPeriodAssetTradeVolumeWithHttpMessagesAsync(string assetId, System.DateTime fromDate, System.DateTime toDate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetPairId within specified time
        /// period.
        /// </summary>
        /// <param name='assetPairId'>
        /// AssetPair Id
        /// </param>
        /// <param name='fromDate'>
        /// Start DateTime (Inclusive) with hour precision
        /// </param>
        /// <param name='toDate'>
        /// Finish DateTime (Exclusive) with hour precision
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetPairTradeVolumeResponse>> GetPeriodAssetPairTradeVolumeWithHttpMessagesAsync(string assetPairId, System.DateTime fromDate, System.DateTime toDate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetPairId within specified time
        /// period.
        /// </summary>
        /// <param name='fromDate'>
        /// Start DateTime (Inclusive) with hour precision
        /// </param>
        /// <param name='toDate'>
        /// Finish DateTime (Exclusive) with hour precision
        /// </param>
        /// <param name='assetPairIds'>
        /// AssetPair Ids
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<AssetPairTradeVolumeResponse>>> GetPeriodAssetPairsTradeVolumeWithHttpMessagesAsync(System.DateTime fromDate, System.DateTime toDate, IList<string> assetPairIds = default(IList<string>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetId for clientId within specified
        /// time period.
        /// </summary>
        /// <param name='assetId'>
        /// Asset Id
        /// </param>
        /// <param name='clientId'>
        /// Client Id
        /// </param>
        /// <param name='fromDate'>
        /// Start DateTime (Inclusive) with hour precision
        /// </param>
        /// <param name='toDate'>
        /// Finish DateTime (Exclusive) with hour precision
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetTradeVolumeResponse>> GetPeriodClientAssetTradeVolumeWithHttpMessagesAsync(string assetId, string clientId, System.DateTime fromDate, System.DateTime toDate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetPairId for clientId within
        /// specified time period.
        /// </summary>
        /// <param name='assetPairId'>
        /// AssetPair Id
        /// </param>
        /// <param name='clientId'>
        /// Client Id
        /// </param>
        /// <param name='fromDate'>
        /// Start DateTime (Inclusive) with hour precision
        /// </param>
        /// <param name='toDate'>
        /// Finish DateTime (Exclusive) with hour precision
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetPairTradeVolumeResponse>> GetPeriodClientAssetPairTradeVolumeWithHttpMessagesAsync(string assetPairId, string clientId, System.DateTime fromDate, System.DateTime toDate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetId for walletId within specified
        /// time period.
        /// </summary>
        /// <param name='assetId'>
        /// Asset Id
        /// </param>
        /// <param name='walletId'>
        /// Wallet Id
        /// </param>
        /// <param name='fromDate'>
        /// Start DateTime (Inclusive) with hour precision
        /// </param>
        /// <param name='toDate'>
        /// Finish DateTime (Exclusive) with hour precision
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetTradeVolumeResponse>> GetPeriodWalletAssetTradeVolumeWithHttpMessagesAsync(string assetId, string walletId, System.DateTime fromDate, System.DateTime toDate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Calculates trade volume of assetPairId for walletId within
        /// specified time period.
        /// </summary>
        /// <param name='assetPairId'>
        /// AssetPair Id
        /// </param>
        /// <param name='walletId'>
        /// Wallet Id
        /// </param>
        /// <param name='fromDate'>
        /// Start DateTime (Inclusive) with hour precision
        /// </param>
        /// <param name='toDate'>
        /// Finish DateTime (Exclusive) with hour precision
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetPairTradeVolumeResponse>> GetPeriodWalletAssetPairTradeVolumeWithHttpMessagesAsync(string assetPairId, string walletId, System.DateTime fromDate, System.DateTime toDate, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
